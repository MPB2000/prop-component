{"ast":null,"code":"import _objectSpread from \"C:/Users/melis/Documents/GitHub/prop-component/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\melis\\\\Documents\\\\GitHub\\\\prop-component\\\\src\\\\Components\\\\ToDoList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoListItem from \"../ToDoListItem\";\nimport { Modal } from \"../Modal\";\nimport Input from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleDelete = id => {\n    const updatedList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedList);\n  };\n  const handleEdit = id => {\n    const updatedList = todoList.map(todo => todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n      text: \"Edited\"\n    }) : todo);\n    setTodoList(updatedList);\n  };\n  const handleChecked = id => {\n    const updatedList = todoList.map(todo => todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n      checked: !todo.checked\n    }) : todo);\n    setTodoList(updatedList);\n  };\n  const handleAdd = text => {\n    const newTodo = {\n      id: todoList.length + 1,\n      text,\n      checked: false\n    };\n    setTodoList([...todoList, newTodo]);\n    setNewTodoText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        children: \"Add New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: newTodoText,\n            onChange: setNewTodoText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleAdd(newTodoText);\n              setIsModalOpen(false);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(ToDoListItem, {\n      type: \"checkbox\",\n      checked: todo.checked,\n      value: todo.text,\n      onDelete: () => handleDelete(todo.id),\n      onChecked: () => handleChecked(todo.id),\n      onEdit: () => handleEdit(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"7C9K6BQh9UVV7h/i6yEwOfVLtuA=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","ToDoListItem","Modal","Input","jsxDEV","_jsxDEV","ToDoList","_s","todoList","setTodoList","newTodoText","setNewTodoText","isModalOpen","setIsModalOpen","handleDelete","id","updatedList","filter","todo","handleEdit","map","_objectSpread","text","handleChecked","checked","handleAdd","newTodo","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","value","onChange","type","onDelete","onChecked","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/melis/Documents/GitHub/prop-component/src/Components/ToDoList/index.tsx"],"sourcesContent":["import { ReactNode, CSSProperties, useState } from \"react\";\r\nimport ToDoListItem from \"../ToDoListItem\";\r\nimport { Modal } from \"../Modal\";\r\nimport Input from \"../Input\";\r\n\r\ntype Todo = {\r\n  id: number;\r\n  text: string;\r\n  checked: boolean;\r\n};\r\nexport default function ToDoList() {\r\n  const [todoList, setTodoList] = useState<Todo[]>([]);\r\n  const [newTodoText, setNewTodoText] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleDelete = (id: number) => {\r\n    const updatedList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const handleEdit = (id: number) => {\r\n    const updatedList = todoList.map((todo) =>\r\n      todo.id === id ? { ...todo, text: \"Edited\" } : todo\r\n    );\r\n    setTodoList(updatedList);\r\n  }\r\n\r\n  const handleChecked = (id: number) => {\r\n    const updatedList = todoList.map((todo) =>\r\n      todo.id === id ? { ...todo, checked: !todo.checked } : todo\r\n    );\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const handleAdd = (text: string) => {\r\n    const newTodo = {\r\n      id: todoList.length + 1,\r\n      text,\r\n      checked: false,\r\n    };\r\n    setTodoList([...todoList, newTodo]);\r\n    setNewTodoText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setIsModalOpen(true)}>Add New Todo</button>\r\n        <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n          <div>\r\n            <h2>Create New Todo</h2>\r\n            <Input value={newTodoText} onChange={setNewTodoText} />\r\n            <button\r\n              onClick={() => {\r\n                handleAdd(newTodoText);\r\n                setIsModalOpen(false);\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n      {todoList.map((todo) => (\r\n        <ToDoListItem\r\n          key={todo.id}\r\n          type=\"checkbox\"\r\n          checked={todo.checked}\r\n          value={todo.text}\r\n          onDelete={() => handleDelete(todo.id)}\r\n          onChecked={() => handleChecked(todo.id)}\r\n          onEdit={() => handleEdit(todo.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}