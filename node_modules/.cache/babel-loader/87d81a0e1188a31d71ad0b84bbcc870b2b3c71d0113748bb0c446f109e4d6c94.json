{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melis\\\\Documents\\\\GitHub\\\\prop-component\\\\src\\\\Components\\\\ToDoList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoListItem from \"../ToDoListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n  const [todoList, setTodoList] = useState([{\n    id: 1,\n    text: \"First\",\n    checked: false\n  }, {\n    id: 2,\n    text: \"Second\",\n    checked: true\n  }]);\n  const handleDelete = id => {\n    const updatedList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoList.map(todo => /*#__PURE__*/_jsxDEV(ToDoListItem, {\n      type: \"checkbox\",\n      checked: todo.checked,\n      on: true,\n      onChecked: () => handleDelete(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"gDpIxABma8EqMLMYsjqeup8yjSk=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","ToDoListItem","jsxDEV","_jsxDEV","ToDoList","_s","todoList","setTodoList","id","text","checked","handleDelete","updatedList","filter","todo","children","map","type","on","onChecked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/melis/Documents/GitHub/prop-component/src/Components/ToDoList/index.tsx"],"sourcesContent":["import { ReactNode, CSSProperties, useState } from \"react\";\r\nimport ToDoListItem from \"../ToDoListItem\";\r\n\r\ntype Todo = {\r\n  id: number;\r\n  text: string;\r\n  checked: boolean;\r\n};\r\nexport default function ToDoList() {\r\n  const [todoList, setTodoList] = useState<Todo[]>([\r\n    { id: 1, text: \"First\", checked: false },\r\n    { id: 2, text: \"Second\", checked: true },\r\n  ]);\r\n\r\n  const handleDelete = (id: number) => {\r\n    const updatedList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {todoList.map((todo) => (\r\n        <ToDoListItem\r\n          key={todo.id}\r\n          type=\"checkbox\"\r\n          checked={todo.checked}\r\n          on\r\n          onChecked={() => handleDelete(todo.id)}\r\n        ></ToDoListItem>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAAmCA,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAS,CAC/C;IAAEQ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE;EAAM,CAAC,EACxC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAK,CAAC,CACzC,CAAC;EAEF,MAAMC,YAAY,GAAIH,EAAU,IAAK;IACnC,MAAMI,WAAW,GAAGN,QAAQ,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;IAC7DD,WAAW,CAACK,WAAW,CAAC;EAC1B,CAAC;EAED,oBACET,OAAA;IAAAY,QAAA,EACGT,QAAQ,CAACU,GAAG,CAAEF,IAAI,iBACjBX,OAAA,CAACF,YAAY;MAEXgB,IAAI,EAAC,UAAU;MACfP,OAAO,EAAEI,IAAI,CAACJ,OAAQ;MACtBQ,EAAE;MACFC,SAAS,EAAEA,CAAA,KAAMR,YAAY,CAACG,IAAI,CAACN,EAAE;IAAE,GAJlCM,IAAI,CAACN,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKC,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAxBuBD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}