{"ast":null,"code":"import _objectSpread from \"C:/Users/melis/Documents/GitHub/prop-component/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\melis\\\\Documents\\\\GitHub\\\\prop-component\\\\src\\\\Components\\\\ToDoList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoListItem from \"../ToDoListItem\";\nimport { Modal } from \"../Modal\";\nimport Input from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState(null);\n  const handleDelete = id => {\n    const updatedList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedList);\n  };\n  const handleEdit = id => {\n    const todoToEdit = todoList.find(todo => todo.id === id);\n    if (todoToEdit) {\n      setCurrentTodo(todoToEdit);\n      setNewTodoText(todoToEdit.text);\n      setIsModalOpen(true);\n    }\n  };\n  const handleChecked = id => {\n    const updatedList = todoList.map(todo => todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n      checked: !todo.checked\n    }) : todo);\n    setTodoList(updatedList);\n  };\n  const handleAddOrEdit = () => {\n    if (currentTodo) {\n      const updatedList = todoList.map(todo => todo.id === currentTodo.id ? _objectSpread(_objectSpread({}, todo), {}, {\n        text: newTodoText\n      }) : todo);\n      setTodoList(updatedList);\n    } else {\n      const newTodo = {\n        id: todoList.length + 1,\n        text: newTodoText,\n        checked: false\n      };\n      setTodoList([...todoList, newTodo]);\n    }\n    setNewTodoText(\"\");\n    setCurrentTodo(null);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCurrentTodo(null);\n          setNewTodoText(\"\");\n          setIsModalOpen(true);\n        },\n        children: \"Add New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentTodo ? \"Edit Todo\" : \"Create New Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: newTodoText,\n            onChange: setNewTodoText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddOrEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(ToDoListItem, {\n      type: \"checkbox\",\n      checked: todo.checked,\n      value: todo.text,\n      onChecked: () => handleChecked(todo.id),\n      onDelete: () => handleDelete(todo.id),\n      onEdit: () => handleEdit(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"7MUtxlTJb6cam4P88iqtGLf+QTY=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","ToDoListItem","Modal","Input","jsxDEV","_jsxDEV","ToDoList","_s","todoList","setTodoList","newTodoText","setNewTodoText","isModalOpen","setIsModalOpen","currentTodo","setCurrentTodo","handleDelete","id","updatedList","filter","todo","handleEdit","todoToEdit","find","text","handleChecked","map","_objectSpread","checked","handleAddOrEdit","newTodo","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","value","onChange","type","onChecked","onDelete","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/melis/Documents/GitHub/prop-component/src/Components/ToDoList/index.tsx"],"sourcesContent":["import { ReactNode, CSSProperties, useState } from \"react\";\r\nimport ToDoListItem from \"../ToDoListItem\";\r\nimport { Modal } from \"../Modal\";\r\nimport Input from \"../Input\";\r\n\r\ntype Todo = {\r\n  id: number;\r\n  text: string;\r\n  checked: boolean;\r\n};\r\n\r\ntype Type = 'create' | 'edit';\r\n\r\nexport default function ToDoList() {\r\n  const [todoList, setTodoList] = useState<Todo[]>([]);\r\n  const [newTodoText, setNewTodoText] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\r\n\r\n  const handleDelete = (id: number) => {\r\n    const updatedList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const handleEdit = (id: number) => {\r\n    const todoToEdit = todoList.find((todo) => todo.id === id);\r\n    if (todoToEdit) {\r\n      setCurrentTodo(todoToEdit);\r\n      setNewTodoText(todoToEdit.text);\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleChecked = (id: number) => {\r\n    const updatedList = todoList.map((todo) =>\r\n      todo.id === id ? { ...todo, checked: !todo.checked } : todo\r\n    );\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const handleAddOrEdit = () => {\r\n    if (currentTodo) {\r\n      const updatedList = todoList.map((todo) =>\r\n        todo.id === currentTodo.id ? { ...todo, text: newTodoText } : todo\r\n      );\r\n      setTodoList(updatedList);\r\n    } else {\r\n      const newTodo = {\r\n        id: todoList.length + 1,\r\n        text: newTodoText,\r\n        checked: false,\r\n      };\r\n      setTodoList([...todoList, newTodo]);\r\n    }\r\n    setNewTodoText(\"\");\r\n    setCurrentTodo(null);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            setCurrentTodo(null);\r\n            setNewTodoText(\"\");\r\n            setIsModalOpen(true);\r\n          }}\r\n        >\r\n          Add New Todo\r\n        </button>\r\n        <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n          <div>\r\n            <h2>{currentTodo ? \"Edit Todo\" : \"Create New Todo\"}</h2>\r\n            <Input value={newTodoText} onChange={setNewTodoText} />\r\n            <button onClick={handleAddOrEdit}>Save</button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n      {todoList.map((todo) => (\r\n        <ToDoListItem\r\n          key={todo.id}\r\n          type=\"checkbox\"\r\n          checked={todo.checked}\r\n          value={todo.text}\r\n          onChecked={() => handleChecked(todo.id)}\r\n          onDelete={() => handleDelete(todo.id)}\r\n          onEdit={() => handleEdit(todo.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}