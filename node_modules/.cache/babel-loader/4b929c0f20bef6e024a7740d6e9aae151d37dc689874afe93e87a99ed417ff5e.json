{"ast":null,"code":"import _objectSpread from \"C:/Users/melis/Documents/GitHub/prop-component/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\melis\\\\Documents\\\\GitHub\\\\prop-component\\\\src\\\\Components\\\\ToDoList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoListItem from \"../ToDoListItem\";\nimport { Modal } from \"../Modal\";\nimport Input from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleDelete = id => {\n    const updatedList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedList);\n  };\n  const [editTodoId, setEditTodoId] = useState(null);\n  const [editTodoText, setEditTodoText] = useState(\"\");\n  const handleEdit = id => {\n    const todoToEdit = todoList.find(todo => todo.id === id);\n    if (todoToEdit) {\n      setEditTodoId(id);\n      setEditTodoText(todoToEdit.text);\n      setIsModalOpen(true);\n    }\n  };\n  const handleSaveEdit = () => {\n    const updatedList = todoList.map(todo => todo.id === editTodoId ? _objectSpread(_objectSpread({}, todo), {}, {\n      text: editTodoText\n    }) : todo);\n    setTodoList(updatedList);\n    setEditTodoId(null);\n    setEditTodoText(\"\");\n    setIsModalOpen(false);\n  };\n  const handleChecked = id => {\n    const updatedList = todoList.map(todo => todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n      checked: !todo.checked\n    }) : todo);\n    setTodoList(updatedList);\n  };\n  const handleAdd = text => {\n    const newTodo = {\n      id: todoList.length + 1,\n      text,\n      checked: false\n    };\n    setTodoList([...todoList, newTodo]);\n    setNewTodoText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        children: \"Add New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: newTodoText,\n            onChange: setNewTodoText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleAdd(newTodoText);\n              setIsModalOpen(false);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(ToDoListItem, {\n      type: \"checkbox\",\n      checked: todo.checked,\n      value: todo.text,\n      onChecked: () => handleChecked(todo.id),\n      onDelete: () => handleDelete(todo.id),\n      onEdit: () => handleEdit(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"bTF3TrAbkdL7hUQ6970/NQJ9eaA=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","ToDoListItem","Modal","Input","jsxDEV","_jsxDEV","ToDoList","_s","todoList","setTodoList","newTodoText","setNewTodoText","isModalOpen","setIsModalOpen","handleDelete","id","updatedList","filter","todo","editTodoId","setEditTodoId","editTodoText","setEditTodoText","handleEdit","todoToEdit","find","text","handleSaveEdit","map","_objectSpread","handleChecked","checked","handleAdd","newTodo","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","value","onChange","type","onChecked","onDelete","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/melis/Documents/GitHub/prop-component/src/Components/ToDoList/index.tsx"],"sourcesContent":["import { ReactNode, CSSProperties, useState } from \"react\";\r\nimport ToDoListItem from \"../ToDoListItem\";\r\nimport { Modal } from \"../Modal\";\r\nimport Input from \"../Input\";\r\n\r\ntype Todo = {\r\n  id: number;\r\n  text: string;\r\n  checked: boolean;\r\n};\r\nexport default function ToDoList() {\r\n  const [todoList, setTodoList] = useState<Todo[]>([]);\r\n  const [newTodoText, setNewTodoText] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleDelete = (id: number) => {\r\n    const updatedList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const [editTodoId, setEditTodoId] = useState<number | null>(null);\r\n  const [editTodoText, setEditTodoText] = useState(\"\");\r\n\r\n  const handleEdit = (id: number) => {\r\n    const todoToEdit = todoList.find((todo) => todo.id === id);\r\n    if (todoToEdit) {\r\n      setEditTodoId(id);\r\n      setEditTodoText(todoToEdit.text);\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    const updatedList = todoList.map((todo) =>\r\n      todo.id === editTodoId ? { ...todo, text: editTodoText } : todo\r\n    );\r\n    setTodoList(updatedList);\r\n    setEditTodoId(null);\r\n    setEditTodoText(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChecked = (id: number) => {\r\n    const updatedList = todoList.map((todo) =>\r\n      todo.id === id ? { ...todo, checked: !todo.checked } : todo\r\n    );\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const handleAdd = (text: string) => {\r\n    const newTodo = {\r\n      id: todoList.length + 1,\r\n      text,\r\n      checked: false,\r\n    };\r\n    setTodoList([...todoList, newTodo]);\r\n    setNewTodoText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setIsModalOpen(true)}>Add New Todo</button>\r\n        <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\r\n          <div>\r\n            <h2>Create New Todo</h2>\r\n            <Input value={newTodoText} onChange={setNewTodoText} />\r\n            <button\r\n              onClick={() => {\r\n                handleAdd(newTodoText);\r\n                setIsModalOpen(false);\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n      {todoList.map((todo) => (\r\n        <ToDoListItem\r\n          key={todo.id}\r\n          type=\"checkbox\"\r\n          checked={todo.checked}\r\n          value={todo.text}\r\n          onChecked={() => handleChecked(todo.id)}\r\n          onDelete={() => handleDelete(todo.id)}\r\n          onEdit={() => handleEdit(todo.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}