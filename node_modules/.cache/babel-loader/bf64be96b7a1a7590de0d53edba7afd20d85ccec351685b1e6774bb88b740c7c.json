{"ast":null,"code":"import _objectSpread from \"C:/Users/melis/Documents/GitHub/prop-component/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\melis\\\\Documents\\\\GitHub\\\\prop-component\\\\src\\\\Components\\\\ToDoList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoListItem from \"../ToDoListItem\";\nimport { Modal } from \"../Modal\";\nimport Input from \"../Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [newTodoText, setNewTodoText] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleDelete = id => {\n    const updatedList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedList);\n  };\n  const handleChecked = id => {\n    const updatedList = todoList.map(todo => todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n      checked: !todo.checked\n    }) : todo);\n    setTodoList(updatedList);\n  };\n  const handleAdd = text => {\n    const newTodo = {\n      id: todoList.length + 1,\n      text,\n      checked: false\n    };\n    setTodoList([...todoList, newTodo]);\n    setNewTodoText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        children: \"Add New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        handleAdd: handleAdd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"\",\n            value: \"\",\n            onChange: function (text) {\n              throw new Error(\"Function not implemented.\");\n            },\n            onBlur: function () {\n              throw new Error(\"Function not implemented.\");\n            },\n            children: [\"type=\\\"text\\\" placeholder=\\\"Enter your todo\\\" value=\", newTodoText, \"onChange=\", setNewTodoText]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleAdd(newTodoText);\n              setTimeout(() => setIsModalOpen(false), 0);\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(ToDoListItem, {\n      type: \"checkbox\",\n      checked: todo.checked,\n      value: todo.text,\n      onDelete: () => handleDelete(todo.id),\n      onChecked: () => handleChecked(todo.id)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"7C9K6BQh9UVV7h/i6yEwOfVLtuA=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","ToDoListItem","Modal","Input","jsxDEV","_jsxDEV","ToDoList","_s","todoList","setTodoList","newTodoText","setNewTodoText","isModalOpen","setIsModalOpen","handleDelete","id","updatedList","filter","todo","handleChecked","map","_objectSpread","checked","handleAdd","text","newTodo","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","type","value","onChange","Error","onBlur","setTimeout","onDelete","onChecked","_c","$RefreshReg$"],"sources":["C:/Users/melis/Documents/GitHub/prop-component/src/Components/ToDoList/index.tsx"],"sourcesContent":["import { ReactNode, CSSProperties, useState } from \"react\";\r\nimport ToDoListItem from \"../ToDoListItem\";\r\nimport { Modal } from \"../Modal\";\r\nimport Input from \"../Input\";\r\n\r\ntype Todo = {\r\n  id: number;\r\n  text: string;\r\n  checked: boolean;\r\n};\r\nexport default function ToDoList() {\r\n  const [todoList, setTodoList] = useState<Todo[]>([]);\r\n  const [newTodoText, setNewTodoText] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleDelete = (id: number) => {\r\n    const updatedList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const handleChecked = (id: number) => {\r\n    const updatedList = todoList.map((todo) =>\r\n      todo.id === id ? { ...todo, checked: !todo.checked } : todo\r\n    );\r\n    setTodoList(updatedList);\r\n  };\r\n\r\n  const handleAdd = (text: string) => {\r\n    const newTodo = {\r\n      id: todoList.length + 1,\r\n      text,\r\n      checked: false,\r\n    };\r\n    setTodoList([...todoList, newTodo]);\r\n    setNewTodoText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setIsModalOpen(true)}>Add New Todo</button>\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onClose={() => setIsModalOpen(false)}\r\n          handleAdd={handleAdd}\r\n        >\r\n          <div>\r\n            <h2>Create New Todo</h2>\r\n            <Input type={\"\"} value={\"\"} onChange={function (text: string): void {\r\n              throw new Error(\"Function not implemented.\");\r\n            } } onBlur={function (): void {\r\n              throw new Error(\"Function not implemented.\");\r\n            } }>\r\n              type=\"text\" placeholder=\"Enter your todo\" value={newTodoText}\r\n              onChange={setNewTodoText}\r\n            </Input>\r\n            <button\r\n              onClick={() => {\r\n                handleAdd(newTodoText);\r\n                setTimeout(() => setIsModalOpen(false), 0);\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n      {todoList.map((todo) => (\r\n        <ToDoListItem\r\n          key={todo.id}\r\n          type=\"checkbox\"\r\n          checked={todo.checked}\r\n          value={todo.text}\r\n          onDelete={() => handleDelete(todo.id)}\r\n          onChecked={() => handleChecked(todo.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}