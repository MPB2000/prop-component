{"ast":null,"code":"import _objectSpread from \"C:/Users/melis/Documents/GitHub/prop-component/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\melis\\\\Documents\\\\GitHub\\\\prop-component\\\\src\\\\Components\\\\ToDoList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ToDoListItem from \"../ToDoListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n  const [todoList, setTodoList] = useState([{\n    id: 1,\n    text: \"First\",\n    checked: false\n  }, {\n    id: 2,\n    text: \"Second\",\n    checked: true\n  }]);\n  return;\n  todoList.map(todo => /*#__PURE__*/_jsxDEV(ToDoListItem, {\n    type: \"checkbox\",\n    checked: todo.checked,\n    onChecked: checked => {\n      const updatedList = todoList.map(item => item.id === todo.id ? _objectSpread(_objectSpread({}, item), {}, {\n        checked\n      }) : item);\n      setTodoList(updatedList);\n    },\n    children: todo.text\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this));\n}\n_s(ToDoList, \"gDpIxABma8EqMLMYsjqeup8yjSk=\");\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["useState","ToDoListItem","jsxDEV","_jsxDEV","ToDoList","_s","todoList","setTodoList","id","text","checked","map","todo","type","onChecked","updatedList","item","_objectSpread","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/melis/Documents/GitHub/prop-component/src/Components/ToDoList/index.tsx"],"sourcesContent":["import { ReactNode, CSSProperties, useState } from \"react\";\r\nimport ToDoListItem from \"../ToDoListItem\";\r\n\r\ntype Todo = {\r\n  id: number;\r\n  text: string;\r\n  checked: boolean;\r\n};\r\nexport default function ToDoList() {\r\n  const [todoList, setTodoList] = useState<Todo[]>([\r\n    { id: 1, text: \"First\", checked: false },\r\n    { id: 2, text: \"Second\", checked: true },\r\n  ]);\r\n  return \r\ntodoList.map((todo) => (\r\n  <ToDoListItem\r\n    key={todo.id}\r\n    type=\"checkbox\"\r\n    checked={todo.checked}\r\n    onChecked={(checked) => {\r\n      const updatedList = todoList.map((item) =>\r\n        item.id === todo.id ? { ...item, checked } : item\r\n      );\r\n      setTodoList(updatedList);\r\n    }}\r\n  >\r\n    {todo.text}\r\n  </ToDoListItem>\r\n));\r\n}\r\n"],"mappings":";;;AAAA,SAAmCA,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAS,CAC/C;IAAEQ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE;EAAM,CAAC,EACxC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAK,CAAC,CACzC,CAAC;EACF;EACFJ,QAAQ,CAACK,GAAG,CAAEC,IAAI,iBAChBT,OAAA,CAACF,YAAY;IAEXY,IAAI,EAAC,UAAU;IACfH,OAAO,EAAEE,IAAI,CAACF,OAAQ;IACtBI,SAAS,EAAGJ,OAAO,IAAK;MACtB,MAAMK,WAAW,GAAGT,QAAQ,CAACK,GAAG,CAAEK,IAAI,IACpCA,IAAI,CAACR,EAAE,KAAKI,IAAI,CAACJ,EAAE,GAAAS,aAAA,CAAAA,aAAA,KAAQD,IAAI;QAAEN;MAAO,KAAKM,IAC/C,CAAC;MACDT,WAAW,CAACQ,WAAW,CAAC;IAC1B,CAAE;IAAAG,QAAA,EAEDN,IAAI,CAACH;EAAI,GAVLG,IAAI,CAACJ,EAAE;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWA,CACf,CAAC;AACF;AAACjB,EAAA,CArBuBD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}